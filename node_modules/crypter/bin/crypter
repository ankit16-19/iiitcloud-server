#!/usr/bin/env node

var program = require("commander");
var crypter = require("../crypter.js");
var fs      = require("fs");
var path    = require("path");
var pkg     = require("../package.json");
var version = pkg.version;

program
  .version(version)
  .usage("{-e | -d} <key> {<file>, -}")
  .description("encrypt/decrypt files to stdout")
  .option("-e, --encrypt <key>", "example: crypter -e mysecret file > file.enc")
  .option("-d, --decrypt <key>", "example: crypter -d mysecret file.enc > file")
  .parse(process.argv);

// --help
if (!program.args.length) program.help();

// --encrypt or --decrypt is required
if (!program.encrypt && !program.decrypt) {
  console.log();
  console.log("  error: must specify --encrypt or --decrypt option");
  console.log();
  process.exit();
}

// --encrypt and --decrypt can't be used together
if (program.encrypt && program.decrypt) {
  console.log();
  console.log("  error: cannot specify --encrypt and --decrypt options simultaneously");
  console.log();
  process.exit();
}

// --encrypt
if (program.encrypt) {

  // encrypt from stdin
  if (program.args[0] === "-") {
    crypter.encrypt(program.encrypt, process.stdin);
  }

  // encrypt from file
  else {
    fs.open(program.args[0], "r", function fsopen(err, fd) {
      if (err) return console.error(err.message)
      crypter.encrypt(program.encrypt, fs.createReadStream("", {fd: fd}));
    });
  }
}

// --decrypt
if (program.decrypt) {

  // decrypt from stdin
  if (program.args[0] === "-") {
    crypter.decrypt(program.decrypt);
  }

  // decrypt from file
  else {
    fs.open(program.args[0], "r", function fsopen(err, fd) {
      if (err) return console.error(err.message);
      crypter.decrypt(program.decrypt, fs.createReadStream("", {fd: fd}));
    });
  }
}
